% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/occupancy.R, R/package.R
\docType{package}
\name{occupancy}
\alias{occupancy}
\alias{occupancy-package}
\title{fit occupancy-detection models}
\usage{
occupancy(formula_occ, formula_detect, site_id, survey_id, data,
  jags_settings = list())
}
\arguments{
\item{formula_occ}{model formula for occupancy component of the model. A two-sided
formula with the response variable on the left of the \code{~} operator and the
predictor variables on the right. Multiple predictor variables are separated by
\code{+} operators. Random effects are included with vertical bars, using the
notation \code{(1 | group)} to specify a random intercept for the variable
\code{group}. More complex random structures (e.g., random slopes) are not 
supported.}

\item{formula_detect}{model formula for detection component of the model. A one-sided
formula with predictor variables on the right, formatted as for \code{formula_occ}.}

\item{site_id}{the name of the column in \code{data} in which site
identifiers are recorded.}

\item{survey_id}{the name of the column in \code{data} in which survey
identifiers are recorded.}

\item{data}{a \code{data.frame} in long format containing data on all variables. Required
variables include the response (detection-nondetection data), site and survey identifiers
(see \code{site_id} and \code{survey_id}, above), and predictor variables. Column names
must match the names used in \code{formula_occ} and \code{formula_detect}.}

\item{jags_settings}{optional list of MCMC settings. Any or all items can be altered
if needed. Options are:
\describe{
  \item{\code{n_iter}}{the total number of MCMC iterations (including burn-in)}
  \item{\code{n_burnin}}{the number of MCMC iterations to discard as a burn-in}
  \item{\code{n_chains}}{the number of MCMC chains}
  \item{\code{n_thin}}{thinning rate of MCMC samples}
  \item{\code{parallel}}{logical, should chains be run in parallel?}
  \item{\code{modules}}{JAGS modules to load}
  \item{\code{params}}{character vector of parameters to store}
  \item{\code{seed}}{seed used to initialise MCMC chains}
}}
}
\value{
\code{occupancy_model} - a \code{list} object that can be analysed using
  functions described in \link[occupancy:methods]{methods}.
}
\description{
occupancy is a function to fit occupancy-detection models in JAGS from
    within R. Models are specified with a formula interface and are supported by 
    methods to summarise, visualise, validate, and predict from fitted models.

occupancy lets you fit occupancy-detection models in JAGS without
  having to prepare JAGS code. Models are specified with a formula interface
  and can incorporate random effects. Models are supported by several methods
  to summarise, visualise, validate, and predict from fitted models.
}
\details{
This function fits an occupancy-detection model in JAGS from two formulas:
    \code{formula_occ} and \code{formula_detect}. Occupancy-detection models separate
    the two processes of being present at a site and being detect given presence at
    a site. This requires data from repeated visits (surveys) to sites.
    
    The occupancy component of the model (presence at a site) is defined at
    the site level. The detection component of the model (detections given presence)
    is defined at the survey level. The model assumes that associations between
    occupancy/detection and predictor variables are linear on a logit scale.
}
\examples{
\dontrun{

# fit a model to simulated data
mod <- occupancy(response ~ occ_predictor1 + occ_predictor2 + 
                    (1 | occ_random1) + (1 | occ_random2),
                  ~ detect_predictor1 + detect_predictor2 + 
                   (1 | detect_random1),
               site_id = "site",
               survey_id = "survey",
               data = occupancy_data,
               jags_settings = list(n_iter = 1000, n_burnin = 500, n_thin = 2))
               
# plot the model coefficients
par(mfrow = c(2, 1))
plot(mod)

# extract the model coefficients
coef(mod)

# check model fit
calculate_metrics(mod)
     
}

\dontrun{
# a simple occupancy-detection model for artificial data

# build and sample

# plot coefficients

# validate

}
}
