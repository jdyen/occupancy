% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{methods}
\alias{methods}
\alias{predict.occupancy_model}
\alias{spatial_predict}
\alias{summary.occupancy_model}
\alias{coef.occupancy_model}
\alias{calculate_metrics}
\alias{r2_calc}
\alias{plot.occupancy_model}
\alias{plot_pr_occ}
\alias{plot_pr_detect}
\title{methods for occupancy_models}
\usage{
\method{predict}{occupancy_model}(object, newdata = NULL,
  type = c("link", "response"), ...)

spatial_predict(object, newdata = NULL, type = "response", ...)

\method{summary}{occupancy_model}(object, ...)

\method{coef}{occupancy_model}(object, ...)

calculate_metrics(object, ...)

r2_calc(object, ...)

\method{plot}{occupancy_model}(x, type = "barplot", names_occ = NULL,
  names_detect = NULL, intercept = FALSE, ...)

plot_pr_occ(object, npred = 1000, var_name = NULL, label = NULL, ...)

plot_pr_detect(object, npred = 1000, var_name = NULL, label = NULL,
  scale = NULL, ...)
}
\arguments{
\item{object}{a model fitted with \link[occupancy:occupancy][occupancy]}

\item{newdata}{for \code{predict}, a \code{list} object with named elements corresponding
to all included data types, any or all of: X_occ (fixed occupancy predictors),
X_detect (fixed detection predictors), Z_occ (random occupancy predictors),
and Z_detect (random detection predictors). For \code{spatial_predict}, a raster
stack with one raster for each predictor included in the occupancy model. The
intercept is added to this raster stack within the \code{spatial_predict} function.}

\item{type}{character denoting whether predictions are generated on the link ("link") or
original ("response") scale. For \code{spatial_predict}, all predictions are generated on
the original (response) scale.}

\item{\dots}{additional arguments passed to the default methods}

\item{x}{a model fitted with \link[occupancy:occupancy][occupancy]}

\item{names_occ}{optional, the names of occupancy predictors to be used in plots}

\item{names_detect}{optional, the names of detection predictors to be used in plots}

\item{intercept}{logical, should the intercept be included on plots?}

\item{npred}{number of points at which to evaluate predictions}

\item{var_name}{\code{character} defining the variable to be plotted (defaults to the
first variable named in the model formula)}

\item{label}{optional, x-axis label for plots}

\item{scale}{optional, mean and standard deviation to plot values against unscaled
predictor variables}
}
\description{
This is a list of functions (mostly from base R) that are
  currently implemented for fitted occupancy models.
}
\details{
\code{predict} generates predictions of occupancy probabilities, detection
    probabilities, and likely detections (sampled as binary detection/nondetection)
    given these probabilities.
}
\section{Usage}{
 \preformatted{

 # predict if newdata are provided as a data.frame
 predict(object, newdata = NULL, type = c("link", "response"), ...)
 
 # predict if newdata are provided as a raster
 spatial_predict(object, newdata = NULL, type = "response", ...)
 
 # extract coefficients from a fitted model
 coef(object, ...)
 
 # summarise a fitted model
 summary(object, ...)
 
 # extract fitted values from a model
 fitted(object, type = c("link", "response"), ...)
 
 # calculate a pseudo-r2 value based on McFadden's r-squared
 r2_calc(object, ...)
 
 # calculate a suite of validation metrics (r2, AUC, DIC)
 calculate_metrics(object, ...)
 
 # plot the model coefficients
 plot(x, type, names_occ, names_detect, intercept, ...)
 
 # predictive plots of probabilities of occupancy
 plot_pr_occ(object, npred, var_name, label, ...)
 
 # predictive plots of probabilities of detection
 plot_pr_detect(object, npred, var_name, label, scale, ...)
 
}
}

\examples{
\dontrun{

# fit a model to simulated data
mod <- occupancy(response ~ occ_predictor1 + occ_predictor2 + 
                    (1 | occ_random1) + (1 | occ_random2),
                  ~ detect_predictor1 + detect_predictor2 + 
                   (1 | detect_random1),
               site_id = "site",
               survey_id = "survey",
               data = occupancy_data,
               jags_settings = list(n_iter = 1000, n_burnin = 500, n_thin = 2))
               
# plot the model coefficients
par(mfrow = c(2, 1))
plot(mod)

# extract the model coefficients
coef(mod)

# check model fit
calculate_metrics(mod)

# plot probability of occupancy as one variable is changed
plot_pr_occ(mod, npred = 1000, var_name = "occ_predictor1")

# plot probability of detection as one variable is changed
plot_pr_detect(mod, npred = 1000, var_name = "detect_predictor2")

}
}
